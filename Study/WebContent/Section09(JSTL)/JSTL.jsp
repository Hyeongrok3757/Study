<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<%

	// JSTL( JSP Standard Tag Library )
	
	// 간단한 로직 구사 ( 자바의 변수 선언, if문, for문 등)
	// 다른 jsp페이지 호출 ( <c:redirect>, <c:import> )
	// 날짜, 시간, 숫자의 포멧
	// JSP페이지 하나로 여러 언어의 웹 페이지 생성
	// 데이터베이스로의 입력, 수정, 삭제, 조회
	// XML 문서의 처리
	// 문자열을 처리하는 함수 호출
	
	// JSTL을 구성하는 작은 라이브러리들
	// |	라이브러리	|	접두어	|	URI										|	기능
	// ---------------------------------------------------------------------------------------------------------------------------------------------------------------
	// |	코어		|	c		|	http://java.sun.com/jsp/jstl/core		|	일반 프로그래밍 언어에서 제공하는것과 유사함. 변수선언, 흐름제어, 페이지 이동 등
	// |	포매팅		|	fmt		|	http://java.sun.com/jsp/jstl/fmt		|	숫자, 날짜, 시간을 포매팅하고 국제화, 다국어 지원 기능
	// |	데이터베이스|	sql		|	http://java.sun.com/jsp/jstl/sql		|	데이터베이스의 데이터를 입력, 수정, 삭제, 조회하는 기능
	// |	XML처리		|	x		|	http://java.sun.com/jsp/jstl/xml		|	XML문서를 처리할 때 필요한 기능
	// |	함수		|	fn		|	http://java.sun.com/jsp/jstl/functions	|	문자열을 처리하는 함수를 제공

	// 선언형식 --> <%@taglib prefix="접두어" uri="URI경로" % >
	// 지시자는 jsp페이지의 위쪽에 기술하는 것이 적절하다.(강제는 아님.)
	
	// jstl의 라이브러리 : jstl.jar + standard.jar (1.1기준)
	// 톰캣 전체에서 사용하도록 하는 방법 : 톰캣설치경로/lib 에 설치
	// 특정 웹 애플리케이션에만 사용 : 톰켓설치경로/webapps/애플리케이션이름/WEB-INF/lib 에 설치
	
	
	
	//---------------------------------------------------------------------------------------------------------------------------------------------
	// ▶1. 코어 라이브러리
	//---------------------------------------------------------------------------------------------------------------------------------------------
	
	// ★ <c:set> : 변수를 선언하고 초기값을 대입하는 기능	ex) <c:set var="변수이름" value="초기값" scope="저장될 영역"/> (변수타입은 쓰지않는다.)
	// XML문법을 따라야 하므로 데이터가 수치값이라도 반드시 따옴표("")로 묶어서 표시한다.
	// 자바변수가 아니라 page데이터 영역의 애트리뷰트가 된다.  --> 스크립팅(<% % >)요소로 사용할 수 없으며 EL문으로 사용가능.
	// value영역에 EL문이나 스크립팅(<% % >)영역에서 선언한 변수를 사용할수 있다. --> ex) value="${name}" , value="<%=age% >"  ( 스크립팅 요소는 잘 쓰지 않는다. )
	
	// ★ <c:remove> : 변수를 삭제한다.
	// <c:remove var="변수이름"> 						--> 4종류의 데이터영역에서 변수이름에 해당하는 데이터를 모두 지운다.
	// <c:remove var="변수이름" scope="데이터영역"> 	--> 지정된 영역에서 변수이름에 해당하는 데이터를 지운다.
	
	// ★ <c:if> : 주어진 조건에 따라 어떠 동작을 수행하도록 만든다.		ex) <c:if test="${param.num1 > param.num2}"> 동작 </c:if>
	// <c:if test="조건">	동작	</c:if>				--> 조건식은 반드시 EL문으로 기술해야 한다.(단 true, false를 직접 넣을수도 있다.)
	
	// ★ <c:choose>		: 자바의 switch 역할 	
	// ★ <c:when>		: 자바의 case절 역할
	// ★ <c:otherwise>	: 자바의 default절 역할



























%>